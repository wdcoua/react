{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/hoc/withAuthRedirect.jsx","images/user.png","components/Profile/Profile.module.css","components/Profile/ProfileEditForm.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","length","maxLenCreator","maxLen","minLenCreator","minLen","FormControl","input","meta","touched","error","elType","props","hasError","className","styles","formControls","React","createElement","Textarea","Input","Hidden","type","createMyField","placeholder","component","name","validators","text","validate","module","exports","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","to","ProfileEditForm","handleSubmit","onSubmit","c","form_name","Field","ProfileEditReduxForm","reduxForm","form","Profile","memo","profile","status","userID","profileUpdatedToggle","co","contacts","isOwner","userId","useState","editMode","setEditMode","useEffect","toggleEditMode","setProfileUpdated","formData","out","aboutMe","facebook","github","instagram","mainLink","twitter","vk","website","youtube","lookingForAJob","lookingForAJobDescription","fullName","updateProfile","onClick","src","photos","large","defaultUserPhoto","alt","profileData","Object","keys","map","k","key","contactName","contactValue","Contact","indexOf","contact","dangerouslySetInnerHTML","__html","compose","profilePage","initialValues","withRouter","getProfile","getStatus","history","userID2","match","params","push","Preloader"],"mappings":"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","file":"static/js/6.887c8801.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n    // console.log(props)\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n/*\n\nReact.createElement(\n    \"input\", {\n        className: \"rating-input\", type: \"radio\", name: \"rate\", value: \"1\", ref: \"rating\", onChange: this.handleChange\n    }\n),\n*/\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea' />\n}\nexport const Radio = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='input' type='radio'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='hidden' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = ({auth}) => {\n    return {\n        isAuth: auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    const RedirectComponent = (props) => {\n        if(!props.isAuth) return <Redirect to={'/login'}/>;\n        return <Component {...props} />;\n    }\n    /*\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props} />;\n        }\n    }*/\n\n    return connect(mapStateToProps)(RedirectComponent)\n}\n","module.exports = __webpack_public_path__ + \"static/media/user.d961d73a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_name\":\"Profile_form_name__28H-a\",\"error\":\"Profile_error__2MfV7\",\"contact\":\"Profile_contact__3CxSX\",\"fullName\":\"Profile_fullName__3wAsd\",\"profileData\":\"Profile_profileData__2iLhO\"};","import React from \"react\";\nimport {Field} from \"redux-form\";\nimport {createMyField, Input, Textarea} from \"../common/FormsControls/FormsControls\";\n// import {compose} from \"redux\";\n// import {connect} from \"react-redux\";\nimport c from './Profile.module.css';\n// import {updateProfile} from \"../../redux/profile_reducer\";\n\n\nconst ProfileEditForm = ({ handleSubmit}) => {\n\n    // let errrs = (error ? error.split('|||') : []);\n\n    return <form onSubmit={handleSubmit}>\n        {/*{error ? <div className={c.error}>\n            {errrs.map((er) => {return <div>{er}</div>})}\n        </div> : ''}*/}\n\n        <button>Save</button>\n        <div className={c.form_name}>fullName:</div>{createMyField(null, Input, 'fullName', [])}\n        <div className={c.form_name}>aboutMe:</div>{createMyField(null, Input, 'aboutMe', [], )}\n        <div className={c.form_name}>facebook:</div>{createMyField(null, Input, 'facebook', [], )}\n        <div className={c.form_name}>github:</div>{createMyField(null, Input, 'github', [], )}\n        <div className={c.form_name}>instagram:</div>{createMyField(null, Input, 'instagram', [], )}\n        <div className={c.form_name}>mainLink:</div>{createMyField(null, Input, 'mainLink', [], )}\n        <div className={c.form_name}>twitter:</div>{createMyField(null, Input, 'twitter', [], )}\n        <div className={c.form_name}>vk:</div>{createMyField(null, Input, 'vk', [], )}\n        <div className={c.form_name}>website:</div>{createMyField(null, Input, 'website', [], )}\n        <div className={c.form_name}>youtube:</div>{createMyField(null, Input, 'youtube', [], )}\n        <div className={c.form_name}>Я ищу работу:</div>\n        {/*{createMyField(null, Radio, 'lookingForAJob', [], {label: 'Yes', },'Да')}*/}\n        {/*{createMyField(null, Radio, 'lookingForAJob', [], {label: 'No', },'Нет')}*/}\n        <label><Field name=\"lookingForAJob\" component={Input} type=\"radio\" value=\"1\"/> Yes</label>\n        <label><Field name=\"lookingForAJob\" component={Input} type=\"radio\" value=\"0\"/> No</label><br/>\n        <div className={c.form_name}>Описание для искомой работы:</div>{createMyField(null, Textarea, 'lookingForAJobDescription', [], )}\n\n\n        {/*<button>Save</button>*/}\n    </form>\n}\n\n/*\n\"aboutMe\": formData.aboutMe,\n    \"contacts\": {\n    facebook: formData.facebook,\n        github: formData.github,\n        instagram: formData.instagram,\n        mainLink: formData.mainLink,\n        twitter: formData.twitter,\n        vk: formData.vk,\n        website: formData.website,\n        youtube: formData.youtube\n},\n\"lookingForAJob\": formData.lookingForAJob === '1',\n    \"lookingForAJobDescription\": formData.lookingForAJobDescription,\n    \"fullName\": formData.fullName*/\n\nexport default ProfileEditForm\n","import React, {useEffect, useState} from \"react\";\nimport defaultUserPhoto from \"../../images/user.png\";\nimport {reduxForm} from \"redux-form\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {setProfileUpdated, updateProfile} from \"../../redux/profile_reducer\";\nimport ProfileEditForm from \"./ProfileEditForm\";\nimport c from \"./Profile.module.css\"\nimport {renderToString} from \"react-dom/server\";\n\n\nconst ProfileEditReduxForm = reduxForm({\n    form: 'profileEdit'\n})(ProfileEditForm)\n\n//\n// const mapStateToProps = ({profilePage}) => {\n//     //debugger\n//\n//     let co = profilePage.profile.contacts;\n//     return {\n//         initialValues: {\n//             fullName: profilePage.profile.fullName,\n//             aboutMe: profilePage.profile.aboutMe,\n//             facebook: co.facebook,\n//             github: co.github,\n//             instagram: co.instagram,\n//             mainLink: co.mainLink,\n//             twitter: co.twitter,\n//             vk: co.vk,\n//             website: co.website,\n//             youtube: co.youtube,\n//             lookingForAJob: profilePage.profile.lookingForAJob ? '1' : '0',\n//             lookingForAJobDescription: profilePage.profile.lookingForAJobDescription,\n//\n//         },\n//\n//         //capthaImg: props.capthaImg\n//     }\n// };\n\n// React.memo === shouldComponentUpdate\n\nconst Profile = React.memo((props) => {\n    let {profile, status, userID, profileUpdatedToggle} = props;\n    let co = profile.contacts;\n    let isOwner = (userID === profile.userId);\n\n    // let [isOwner, setIsOwner] = useState(0); // hook\n    let [editMode, setEditMode] = useState(false); // hook\n\n\n    useEffect(() => {\n        // console.log('new profile');\n        // console.log(profileUpdatedToggle);\n\n        if (profileUpdatedToggle) {\n            toggleEditMode();\n            props.setProfileUpdated(false);\n        }\n\n    }, [profileUpdatedToggle]); // якщо написати [examples], то скрипт буде бомбити сервер запитами \"чи не змінились екзампли\"\n\n\n    const toggleEditMode = () => {\n        if (editMode === false)\n            setEditMode(true);\n        else {\n            setEditMode(false);\n            //setStatus(tempStatus);\n        }\n    }\n\n\n    const onSubmit = (formData) => { //formData\n        //\n        /*if (props.auth.isAuth === false) {\n            props.login(email, pass, rememberMe, captcha)\n        } else {\n            return <Redirect to={'/index'}/>\n        }*/\n\n        let out = {\n            \"userId\": profile.userId,\n            \"aboutMe\": formData.aboutMe,\n            \"contacts\": {\n                facebook: formData.facebook,\n                github: formData.github,\n                instagram: formData.instagram,\n                mainLink: formData.mainLink,\n                twitter: formData.twitter,\n                vk: formData.vk,\n                website: formData.website,\n                youtube: formData.youtube\n            },\n            \"lookingForAJob\": formData.lookingForAJob === '1',\n            \"lookingForAJobDescription\": formData.lookingForAJobDescription,\n            \"fullName\": formData.fullName\n        }\n        // formData.lookingForAJob = formData.lookingForAJob === '1'\n        // console.log(formData)\n        //  console.log(out)\n        // console.log('test1')\n        props.updateProfile(out);\n        // console.log('test2')\n        // debugger\n\n        //     prom.then(\n        //         ()=>{\n        //             toggleEditMode();\n        //             console.log(prom)\n        //\n        //         }\n        //     );\n        // let data = await Promise.all([prom])\n        //     .then( () => {\n        //         console.log(prom)\n        //         toggleEditMode();\n        //     })\n    }\n\n\n    // console.log('isOwner - '+isOwner + ' - +' + userID+ '+ - +' + profile.userId+'+')\n\n    return <div>\n        {\n            /*isOwner ? (\n                editMode ? <div>\n                    edit form\n                    <button onClick={toggleEditMode}>Save</button>\n                </div>\n                    : <div><button onClick={toggleEditMode}>Edit Profile</button><br/></div>\n            ) : ''\n*/\n\n            isOwner && editMode\n                ? <div>\n                    {/*<ProfileEditReduxForm onSubmit={onSubmit} initialValues={profile} {...props} />*/}\n                    <ProfileEditReduxForm onSubmit={onSubmit} {...props} />\n                </div>\n                : <div>\n                    {isOwner ? <div>\n                        <button onClick={toggleEditMode}>Edit Profile</button>\n                        <br/></div> : ''}\n                    <img src={profile.photos.large ? profile.photos.large : defaultUserPhoto} alt=\"\"/>\n                    <div className={c.fullName}>{profile.fullName}</div>\n\n                    <div>\n                        <span className={c.profileData}>Статус:</span> {status}</div>\n                    <div>\n                        <span className={c.profileData}>Обо мне:</span> {profile.aboutMe}\n                    </div>\n                    <div>\n                        <span className={c.profileData}>Ищу работу:</span> {profile.lookingForAJob ? 'Да' : 'Нет'}<br/>\n                        <span className={c.profileData}>Описание для искомой работы:</span> {profile.lookingForAJobDescription}\n                    </div>\n                    { // show only if there is at least one contact\n                        co.facebook ||\n                        co.github ||\n                        co.instagram ||\n                        co.vk ||\n                        co.mainLink ||\n                        co.twitter ||\n                        co.youtube ||\n                        co.website ? <><b><u>Мои контакты:</u></b> <br/></> : ''\n                    }\n\n                    {Object.keys(co).map((k) => {\n                        return <Contact key={k} contactName={k} contactValue={co[k]}/>\n                    })}\n\n                    {/*{co.facebook ? <div><u>FB:</u> {co.facebook}</div> : ''}*/}\n                    {/*{co.github ? <div><u>GH:</u> {co.github}</div> : ''}*/}\n                    {/*{co.instagram ? <div><u>INST:</u> {co.instagram}</div> : ''}*/}\n                    {/*{co.vk ? <div><u>VK:</u> {co.vk}</div> : ''}*/}\n                    {/*{co.mainLink ? <div><u>mainLink:</u> {co.mainLink}</div> : ''}*/}\n                    {/*{co.twitter ? <div><u>TW:</u> {co.twitter}</div> : ''}*/}\n                    {/*{co.youtube ? <div><u>YT:</u> {co.youtube}</div> : ''}*/}\n                    {/*{co.website ? <div><u>Site:</u> <a href={co.website}>{co.website}</a></div> : ''}*/}\n                </div>\n        }\n\n    </div>;\n});\n// {'style=\"margin-left: 15px;\"'}\nconst Contact = ({contactName, contactValue}) => {\n    if(contactName && contactValue){\n        if(contactValue.indexOf('http') !== 0)\n            contactValue = '<a href=\"https://' + contactValue + '\">' + contactValue + '</a>';\n        else\n            contactValue = '<a href=\"'+contactValue+'\">'+contactValue+'</a>';\n\n\n        return <div className={c.contact} dangerouslySetInnerHTML={{\n            __html: '<b>'+contactName+':</b> '+contactValue+''\n        }}/>\n    }else{\n        return null;\n    }\n\n}\n\n/*\nObject { gb: {…}, chat: {…}, examples: {…}, users: {…}, profilePage: {…}, auth: {…}, form: {}, app: {…} }\n\napp: Object { initialized: true }\n\nauth: Object { userID: 11583, email: \"wd.co.ua@gmail.com\", login: \"WD8\", … }\n\ncaptchaAnswer: null\n\ncapthaImg: null\n\nemail: \"wd.co.ua@gmail.com\"\n\nisAuth: true\n\nlogin: \"WD8\"\n\nloginError: null\n\nuserID: 11583\n\nuserImg: null\n\n<prototype>: Object { … }\n\nchat: Object { chatPosts: (6) […], newChatPostText: \"this is Sparta!\" }\n\nexamples: Object { examplesList: (19) […] }\n\nform: Object {  }\n\ngb: Object { gbPosts: (2) […], newPostText: \"hi how are u?))\" }\n\nprofilePage: Object { profile: {…}, status: \"97\" }\n\nprofile: Object { aboutMe: \"Димыч, курсы - агонь!!!\", lookingForAJob: false, lookingForAJobDescription: \"уже есть\", … }\n\naboutMe: \"Димыч, курсы - агонь!!!\"\n\ncontacts: Object { facebook: \"\", website: \"localhost.com\", vk: \"\", … }\n\nfacebook: \"\"\n\ngithub: \"\"\n\ninstagram: \"\"\n\nmainLink: \"\"\n\ntwitter: \"\"\n\nvk: \"\"\n\nwebsite: \"localhost.com\"\n\nyoutube: \"\"\n\n<prototype>: Object { … }\n\nfullName: \"WD\"\n\nlookingForAJob: false\n\nlookingForAJobDescription: \"уже есть\"\n\nphotos: Object { small: \"https://social-network.samuraijs.com/activecontent/images/users/11583/user-small.jpg?v=6\", large: \"https://social-network.samuraijs.com/activecontent/images/users/11583/user.jpg?v=6\" }\n\nuserId: 11583\n\n<prototype>: Object { … }\n\nstatus: \"97\"\n\n<prototype>: Object { … }\n\nusers: Object { usersPerPage: 20, totalUsers: 11974, currentPage: 270, … }\n\n<prototype>: Object { … }\n\n\n*/\n\n/*\n\nдублюю верхнє\n\n\n\nconst Profile = React.memo((props) => {\n    return <div>\n        <img src={props.profile.photos.large} alt=\"\"/>\n        <div><b>{props.profile.fullName}</b></div>\n        <div>Статус: {props.status}</div>\n        <div>Обо мне: \"{props.profile.aboutMe}\"</div><br/>\n        Мои контакты: <br/>\n        <div>{props.co.facebook}</div>\n        <div>{props.co.github}</div>\n        <div>{props.co.instagram}</div>\n        <div>{props.co.vk}</div>\n\n    </div>;\n});\n\n\n*/\n\n/*\nабо\n\nclass Profile extends PureComponent {\n\n    render() {\n        return <div>\n            <img src={this.props.profile.photos.large} alt=\"\"/>\n            <div><b>{this.props.profile.fullName}</b></div>\n            <div>Статус: {this.props.status}</div>\n            <div>Обо мне: \"{this.props.profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{this.props.co.facebook}</div>\n            <div>{this.props.co.github}</div>\n            <div>{this.props.co.instagram}</div>\n            <div>{this.props.co.vk}</div>\n\n        </div>;\n    }\n}\n\n*/\n\n\n/*\n\nабо\n\n\nclass Profile extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps != this.props || nextState != this.state;\n    }\n\n    render() {\n        return <div>\n            <img src={this.props.profile.photos.large} alt=\"\"/>\n            <div><b>{this.props.profile.fullName}</b></div>\n            <div>Статус: {this.props.status}</div>\n            <div>Обо мне: \"{this.props.profile.aboutMe}\"</div><br/>\n            Мои контакты: <br/>\n            <div>{this.props.co.facebook}</div>\n            <div>{this.props.co.github}</div>\n            <div>{this.props.co.instagram}</div>\n            <div>{this.props.co.vk}</div>\n\n        </div>;\n    }\n}\n\n* */\n\n\n// export default Profile\n\n\nconst mapStateToProps = ({profilePage}) => {\n    //debugger\n\n    let co = profilePage.profile.contacts;\n    return {\n        initialValues: {\n            fullName: profilePage.profile.fullName,\n            aboutMe: profilePage.profile.aboutMe,\n            facebook: co.facebook,\n            github: co.github,\n            instagram: co.instagram,\n            mainLink: co.mainLink,\n            twitter: co.twitter,\n            vk: co.vk,\n            website: co.website,\n            youtube: co.youtube,\n            lookingForAJob: profilePage.profile.lookingForAJob ? '1' : '0',\n            lookingForAJobDescription: profilePage.profile.lookingForAJobDescription,\n\n        },\n\n        //capthaImg: props.capthaImg\n    }\n};\n/*\n\"aboutMe\": formData.aboutMe,\n    \"contacts\": {\n    facebook: formData.facebook,\n        github: formData.github,\n        instagram: formData.instagram,\n        mainLink: formData.mainLink,\n        twitter: formData.twitter,\n        vk: formData.vk,\n        website: formData.website,\n        youtube: formData.youtube\n},\n\"lookingForAJob\": formData.lookingForAJob === '1',\n    \"lookingForAJobDescription\": formData.lookingForAJobDescription,\n    \"fullName\": formData.fullName*/\n\nexport default compose(\n    connect(mapStateToProps, {updateProfile, setProfileUpdated}),\n)(Profile)\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus} from \"../../redux/profile_reducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport {withRouter} from \"react-router-dom\";\nimport Profile from \"./Profile\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst ProfileContainer = (props) => {\n\n    useEffect(() => {\n        // console.log('PC test');\n        let {getStatus, getProfile, userID, history, match} = props;\n        //this.props.setFetchingStatus(true);\n        let userID2 = match.params.userID;\n        // console.log('PC test2 - ' + userID2);\n            if (!userID2 && userID) userID2 = userID; // if no ID was passed script will show 'me'\n            // console.log('PC test2 - ' + userID2);\n        if (userID2) {\n            getStatus(userID2);\n            getProfile(userID2);\n\n        } else {\n            history.push('/login')\n        }\n\n    },[props.userID,props.match.params.userID]);\n\n\n\n\n    if (!props.profile)\n        return <Preloader/>\n\n    return <Profile {...props}/>\n\n}\n    /*\n\n    class ProfileContainer2 extends React.Component {\n\n        componentDidMount() {\n\n            let {getStatus, getProfile, userID, history, match} = this.props;\n            //this.props.setFetchingStatus(true);\n            let userID2 = match.params.userID;\n            if (!userID2 && userID) userID2 = userID\n            if (userID2) {\n                getStatus(userID2);\n                getProfile(userID2);\n            } else {\n                history.push('/login')\n            }\n\n        }\n\n        componentDidUpdate(prevProps, prevState, snapshot) {\n\n            let {match, userID1, getStatus, getProfile, history} = this.props;\n            let p = match.url;\n            let pp = prevProps.match.url;\n            let s = this.state;\n\n            if (p !== pp) {\n                let userID = match.params.userID;\n                if (!userID && userID1) userID = userID1\n                if (userID) {\n                    getStatus(userID);\n                    getProfile(userID);\n                } else {\n                    history.push('/login')\n                }\n\n            }\n\n        }\n\n        render() {\n            // debugger\n            if (!this.props.profile)\n                return <Preloader/>\n\n            return <Profile {...this.props}/>;\n        }\n    }\n    */\n\nlet mapStateToProps = ({auth, profilePage}) => { // бере увесь глобальний STATE і повертає тільки те, що нам потрібно для цієї компоненти\n    return {\n        userID: auth.userID,\n        profile: profilePage.profile,\n        profileUpdatedToggle: profilePage.profileUpdatedToggle,\n        status: profilePage.status\n    }\n}\n\n//let ProfileContainerWithUrlData = (ProfileContainer);\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {\n        getProfile,\n        getStatus\n    }),\n    withAuthRedirect\n)(ProfileContainer)\n\n"],"sourceRoot":""}