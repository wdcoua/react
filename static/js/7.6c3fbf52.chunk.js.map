{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["required","value","length","maxLenCreator","maxLen","concat","minLenCreator","minLen","FormControl","_ref","input","meta","touched","error","elType","props","hasError","React","createElement","className","styles","formControls","Textarea","Object","assign","Input","Hidden","type","createMyField","placeholder","component","name","validators","arguments","undefined","text","Field","validate","module","exports","Login","LoginReduxForm","onSubmit","email","pass","rememberMe","auth","isAuth","Redirect","to","login","LoginReduxForm2","_ref2","email2","pass2","rememberMe2","maxLen50","minLen2","reduxForm","form","_ref3","handleSubmit","setCaptchaAnswer","formChanged","e","target","onChange","style","noError","captchaDiv","capthaImg","noCaptcha","alt","src","checked","_ref4","compose","connect","_ref5","initialValues","checkAuthorization"],"mappings":"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","file":"static/js/7.6c3fbf52.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n    // console.log(props)\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n/*\n\nReact.createElement(\n    \"input\", {\n        className: \"rating-input\", type: \"radio\", name: \"rate\", value: \"1\", ref: \"rating\", onChange: this.handleChange\n    }\n),\n*/\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea' />\n}\nexport const Radio = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='input' type='radio'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='hidden' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"captchaDiv\":\"Login_captchaDiv__36ONs\",\"noCaptcha\":\"Login_noCaptcha__nLUEK\",\"error\":\"Login_error__17Wu6\",\"noError\":\"Login_noError__3IZw_\"};","import React from \"react\";\nimport { reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {login, checkAuthorization, setCaptchaAnswer} from \"../../redux/auth_reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {createMyField, Hidden, Input} from \"../common/FormsControls/FormsControls\";\nimport {maxLenCreator, minLenCreator, required} from \"../../utils/validate/validator\";\nimport style from \"./Login.module.css\"\n\nconst LoginContainer = (props) => {\n\n    // useEffect(() => {\n    //     let p = this.props;\n    //     let s = this.state;\n    // },[])\n\n\n    return <Login {...props}/>\n}\n\n// class LoginContainer extends React.Component { // зробив для тесту, можна і без цього класу\n//\n//     componentDidUpdate(prevProps, prevState, snapshot) {\n//         let p = this.props;\n//         let s = this.state;\n//         //debugger\n//         // todo не працює при лог-ауті на сайті\n//     }\n//\n//     render() {\n//         return <Login {...this.props}/>\n//     }\n// }\n\nconst Login = (props) => {\n\n    // let {tempCaptcha,setTempCaptcha} = useState('');\n\n    const onSubmit = ({email,pass,rememberMe}) => { //formData\n        //\n        if (props.auth.isAuth === false) {\n            props.login(email, pass, rememberMe)\n        } else {\n            return <Redirect to={'/index'}/>\n        }\n        // console.log(formData)\n    }\n    const onSubmit2 = ({email2,pass2,rememberMe2}) => { //formData\n        //\n        // console.log('email = ' + email2)\n        if (props.auth.isAuth === false) {\n            props.login(email2, pass2, rememberMe2)\n        } else {\n            return <Redirect to={'/index'}/>\n        }\n        // console.log(formData)\n    }\n    return <div>\n        <h1>Авторизація</h1>\n        <LoginReduxForm onSubmit={onSubmit} {...props} /><br/>\n        <LoginReduxForm2 onSubmit={onSubmit2} {...props} />\n    </div>\n}\nconst maxLen50 = maxLenCreator(50);\nconst minLen2 = minLenCreator(2);\n// const numOnly = onlyNumbers();\n\n// main login_form\nconst LoginForm = ({auth, handleSubmit, error,setCaptchaAnswer}) => {\n\n    // remember captcha in State for both accounts (to they both could use it while authorizing)\n    const formChanged = (e) => {\n        if(e.target.name === 'captcha'){\n            setCaptchaAnswer(e.target.value)\n        }\n    }\n\n    if (auth.isAuth === false) {\n\n        return <form onSubmit={handleSubmit} onChange={formChanged} >\n\n            <div className={(!error ? style.noError : '') + ' ' + style.error}>\n                {error}\n            </div>\n            {createMyField('email', Input, 'email', [required, maxLen50, minLen2],{value: 'test'})}\n            {createMyField('pass', Input, 'pass', [required, maxLen50, minLen2], {type: 'password'})}\n\n\n            <div className={style.captchaDiv + ' ' + (!auth.capthaImg ? style.noCaptcha : '')}>\n                <div>\n                    <img alt='captcha' src={auth.capthaImg ? auth.capthaImg : ''}/>\n                </div>\n                {createMyField('enter captcha', Input, 'captcha', (!auth.capthaImg ? [] : [required, maxLen50, minLen2]))}\n            </div>\n\n            {createMyField(null, Input, 'rememberMe', [], {type: 'checkbox',checked: 'checked'}, \"Remember me\")}\n            <div>\n                <button>Log in</button>\n            </div>\n        </form>\n    } else {\n        return <Redirect to={'/index'}/>\n    }\n\n\n}\n\n// secondary login form for TESTing\nconst LoginForm2 = ({auth, handleSubmit, error}) => {\n\n    if (auth.isAuth === false) {\n\n        return <form onSubmit={handleSubmit}>\n\n            <div className={(!error ? style.noError : '') + ' ' + style.error}>\n                {error}\n            </div>\n            {createMyField(null, Hidden, 'email2', [])}\n            {createMyField(null, Hidden, 'pass2', [])}\n\n            {/*  NO CAPTCHA NEEDED */}\n            {/*<div className={style.captchaDiv + ' ' + (!auth.capthaImg ? style.noCaptcha : '')}>*/}\n            {/*    <div>*/}\n            {/*        <img alt='captcha' src={auth.capthaImg ? auth.capthaImg : ''}/>*/}\n            {/*    </div>*/}\n            {/*    {createMyField('enter captcha', Input, 'captcha2', (!auth.capthaImg ? [] : [required, maxLen50, minLen2]))}*/}\n            {/*</div>*/}\n\n            {createMyField(null, Hidden, 'rememberMe2', [])}\n            <div>\n                <button>Log in for test</button>\n            </div>\n        </form>\n    } else {\n        return <Redirect to={'/index'}/>\n    }\n\n\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'auth'\n})(LoginForm)\nconst LoginReduxForm2 = reduxForm({\n    form: 'auth2'\n})(LoginForm2)\n\n\nconst mapStateToProps = ({auth}) => {\n    //debugger\n    return {\n        auth: auth,\n        initialValues: {\n            email2: 'wovo4ka2010@gmail.com',\n            pass2: '3AtGqkmDkKfmX6J',\n            // email2: 'free@samuraijs.com',\n            // pass2: 'free',\n            rememberMe2: true,\n\n        },\n\n        //capthaImg: props.capthaImg\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {login, checkAuthorization,setCaptchaAnswer}),\n)(LoginContainer)\n\n//\n// export default () => {\n//     return <>\n//         <a href={`https://social-network.samuraijs.com/login`} target={`_blank`}>Потрібна авторизація</a>\n//     </>\n// }"],"sourceRoot":""}