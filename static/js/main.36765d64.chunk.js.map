{"version":3,"sources":["redux/app_reducer.js","redux/auth_reducer.js","components/hoc/withSuspenseWrapper.jsx","utils/object-helpers.js","redux/users_reducer.js","serviceWorker.js","redux/redux-store.js","components/Nav/Menu/Menu.jsx","components/Nav/Nav.jsx","components/Examples/Example/Examples.jsx","components/Examples/ExamplesContainer.jsx","components/Main/Main.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/ErrorsShower/ErrorsShower.jsx","components/hoc/withErrorsShowerWrapper.jsx","App.js","index.js","redux/profile_reducer.js","redux/examples_reducer.js","images/kotigoroshko.jpg","components/Preloader/Preloader.jsx","api/api.js","redux/gb_reducer.js","components/Header/Header.module.css","images/zloy_admin.png","components/Nav/Menu/Menu.module.css","components/Footer/Footer.module.css","redux/chat_reducer.js","components/Main/Main.module.css","components/Examples/Example/Example.module.css","images/rings.svg","images/logout.png","components/ErrorsShower/ErrorsShower.module.css"],"names":["SET_INITIALIZED","SET_MAIN_ERROR","initialState","initialized","mainError","app_reducer","state","arguments","length","undefined","action","type","error","settingMainError","async","dispatch","setMainError","initializeApp","promise","checkAuthorization","promise2","getGbPosts","promise3","getUsers","promise4","getExamples","Promise","all","then","SET_USER_DATA","SET_USER_IMG","SET_CAPTCHA_IMG","SET_CAPTCHA_ANS","userID","email","login","userImg","isAuth","capthaImg","captchaAnswer","loginError","auth_reducer","payload","img","ans","setUserAuthData","setUserAuthImg","setCaptchaAnswer","c","data","API","authMe","resultCode","id","promise1","getProfile","getStatus","setUserProfile","setUserStatus","logOut","pass","remember","getState","captcha","auth","stopSubmit","_error","messages","join","getCaptcha","url","withSuspenseWrapper","Component","props","React","createElement","Suspense","fallback","Preloader","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","SET_USERS","SET_INITIAL","SET_PAGE_WITH_ME","SET_TOTAL_USERS","SET_CURRENT_PAGE","CHANGE_FETCHING_STATUS","FOLLOWING_IN_PROGRESS","usersList","usersPerPage","totalUsers","currentPage","isFetching","followingIsInProgress","fake","initial","pageWithMe","myId","users_reducer","user_id","followed","followStatus","users","total","userId","filter","changeUserFollowStatus","setUsers","setPageWithMe","setTotalUsers","setCurrentPage","setFetchingStatus","setFollowingInProgress","totalCount","follow","followToggle","console","log","resp","unfollow","Boolean","window","location","hostname","match","reducers","combineReducers","gb","gb_reducer","chat","chat_reducer","examples","examples_reducer","profilePage","profile_reducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Menu","_ref","href","text","className","menu","NavLink","to","activeClassName","active","Nav","Examples","e","key","example","link","title","descr","connect","useEffect","examplesList","ChatContainer","lazy","GuestBookContainer","Login","MyProfile","ProfileContainer","UsersContainer","Main","main","Switch","Route","path","render","ExamplesContainer","exact","Redirect","Footer","copy","theme","Header","src","logo","alt","logout","onClick","ErrorsShower","setTimeout","errors","mapStateToProps","catchAllUnhandledErrors","event","AppContainer","withRouter","userid","addEventListener","removeEventListener","currentPage2","Math","ceil","HeaderContainer","SamuraiJsApp","HashRouter","Provider","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","SET_USER_PROFILE","SET_USER_STATUS","UPD_USER_PHOTOS","SET_PROFILE_UPDATED","profile","status","profileUpdatedToggle","photos","profileData","setProfileUpdated","updateProfilePhotos","photosData","dispatcher","promises","functions","p","statusText","f","deCapitalizeFirstLetter","string","charAt","toLowerCase","slice","updateProfilePhoto","photoFile","setStatus","updateProfile","profileObj","errObj","erObj","er","found","re2","found2","name","parseErrors","SET_EXAMPLES","DEL_EXAMPLE","ADD_EXAMPLE","ex","module","exports","preloader","style","width","instance","axios","withCredentials","baseURL","headers","instance2","get","response","post","delete","put","photo","formData","FormData","append","password","rememberMe","NEW_GB_POST_CHANGE","ADD_GB_POST","SET_GB_POSTS","DEL_GB_POST","gbPosts","newPostText","d","Date","time","parseInt","getTime","newPost","answer","answer_time","ip","ua","changedText","posts","post_id","addGBPost","newGBpostChange","ADD_CHAT_POST","DEL_CHAT_POST","NEW_CHAT_POST_CHANGE","chatPosts","author","authorAva","kot","date","za","newChatPostText","newChatPost","ch","addChatPost","newChatPostChange"],"mappings":"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","file":"static/js/main.36765d64.chunk.js","sourcesContent":["import {checkAuthorization} from \"./auth_reducer\";\nimport {getGbPosts} from \"./gb_reducer\";\nimport {getUsers} from \"./users_reducer\";\nimport {getExamples} from \"./examples_reducer\";\nimport {API} from \"../api/api\";\nimport {getProfile, getStatus} from \"./profile_reducer\";\n\nconst SET_INITIALIZED = 'samurai_project/app/SET_INITIALIZED';\nconst SET_MAIN_ERROR = 'samurai_project/app/SET_MAIN_ERROR';\n//const SET_ERROR = 'SET_ERROR';\n\nlet initialState = {\n    initialized: false,\n    mainError: ''\n}\n\nconst app_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            }\n\n        case SET_MAIN_ERROR:\n            return {\n                ...state,\n                mainError: action.error,\n            }\n\n\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport default app_reducer;\n\nexport const setInitialized = () => {\n    return {type: SET_INITIALIZED};\n}\nexport const setMainError = (error) => {\n    return {type: SET_MAIN_ERROR,error};\n}\n\n\nexport const settingMainError = (error) => async (dispatch) => {\n    dispatch(setMainError(error))\n}\n\nexport const initializeApp = () => async (dispatch) => {\n    let promise = dispatch(checkAuthorization())\n    let promise2 = dispatch(getGbPosts())\n    let promise3 = dispatch(getUsers())\n    let promise4 = dispatch(getExamples())\n    // let promise5 = dispatch(getProfile())\n    // let promise6 = dispatch(getStatus())\n    let data = await Promise.all([promise,promise2,promise3,promise4])\n     .then( () => {\n        dispatch(setInitialized())\n     })\n\n\n}\n\n\n// thunk-и\n//\n// export const checkAuthorization = () => {\n//     return (dispatch) => {\n//\n//         API.authMe()\n//             .then(data => {\n//                 if(data.resultCode === 0){\n//                     let {id, login, email} = data.data;\n//                     dispatch(setUserAuthData(id,email,login,true,null,null,null));\n//                     API.getProfile(id)\n//                         .then(data => {\n//                             if(data.resultCode === 0){\n//                                 dispatch(setUserAuthImg(data.photos.small))\n//                             }\n//                         })\n//                         .catch(error => {\n//                             console.warn(error);\n//                         });\n//                 }\n//             })\n//             .catch(error => {\n//                 console.warn(error);\n//             });\n//     }\n// }\n//\n//\n// export const logOut = () => {\n//     return (dispatch) => {\n//         API.logOut()\n//             .then(() => {\n//                 console.warn('logout2');\n//                 //dispatch(setUserLogOut());\n//                 dispatch(setUserAuthData(null,null,null,false,null,null,null));\n//\n//             })\n//             .catch(error => {\n//                 console.warn(error);\n//             });\n//     }\n// }\n//\n// export const login = (email,pass,remember,captcha) => {\n//     return (dispatch) => {\n//         API.auth(email,pass,remember,captcha)\n//             .then(data => {\n//                 console.log(data)\n//                 if(data.resultCode === 0){\n//                     console.log('login +')\n//                     dispatch(checkAuthorization());\n//                     /*API.authMe()\n//                         .then(data => {\n//                             if(data.resultCode === 0){\n//                                 let {id, login, email} = data.data;\n//                                 dispatch(setUserAuthData(id,email,login));\n//                                 API.getProfile(id)\n//                                     .then(data => {\n//                                         if(data.resultCode === 0){\n//                                             dispatch(setUserAuthImg(data.photos.small))\n//                                         }\n//                                     })\n//                                     .catch(error => {\n//                                         console.warn(error);\n//                                     });\n//                             }\n//                         })\n//\n//                         .catch(error => {\n//                             console.warn(error);\n//                         });*/\n//                 }else\n//                 {\n//                     //dispatch(setUserAuthError(data.messages.join('<br/>')));\n//\n//                     dispatch(stopSubmit('auth',{_error: data.messages.join('<br/>')}));\n//\n//                     if(data.resultCode === 10){\n//                         API.getCaptcha()\n//                             .then(data => {\n//                                 dispatch(setUserAuthCaptchaImg(data.url))\n//                             })\n//                             .catch(error => {\n//                                 console.warn(error);\n//                             });\n//\n//                         // todo зробити виведення помилок\n//                     }\n//                 }\n//\n//             })\n//             .catch(error => {\n//                 console.warn(error);\n//             });\n//\n//     }\n// }","import {API} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getStatus, setUserProfile, setUserStatus} from \"./profile_reducer\";\nimport {setInitialized} from \"./app_reducer\";\n\nconst SET_USER_DATA = 'samurai_project/auth/SET_USER_DATA';\nconst SET_USER_IMG = 'samurai_project/auth/SET_USER_IMG';\nconst SET_CAPTCHA_IMG = 'samurai_project/auth/SET_CAPTCHA_IMG';\nconst SET_CAPTCHA_ANS = 'samurai_project/auth/SET_CAPTCHA_ANS';\nconst UPD_USER_PHOTOS = 'samurai_project/auth/UPD_USER_PHOTOS';\n//const SET_ERROR = 'SET_ERROR';\n\nlet initialState = {\n    userID: null,\n    email: null,\n    login: null,\n    userImg: null,\n    isAuth: false,\n    capthaImg: null,\n    captchaAnswer: null,\n    loginError: null\n}\n\nconst auth_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        /*case LOG_OUT:\n            return {\n                ...state,\n                isAuth: false\n            }*/\n\n        case SET_USER_IMG:\n            return {\n                ...state,\n                userImg: action.img\n            }\n\n        case SET_CAPTCHA_IMG:\n            return {\n                ...state,\n                capthaImg: action.img\n            }\n        case SET_CAPTCHA_ANS:\n            return {\n                ...state,\n                captchaAnswer: action.ans\n            }\n        /*        case SET_ERROR:\n                    return {\n                        ...state,\n                        loginError:action.err\n                    }*/\n\n\n        default:\n            return state;\n\n    }\n\n}\n\nexport default auth_reducer;\n\nexport const setUserAuthData = (userID, email, login, isAuth, capthaImg, captchaAnswer, loginError) => {\n    return {type: SET_USER_DATA, payload: {userID, email, login, isAuth, capthaImg, captchaAnswer, loginError}};\n}\n\n/*export const setUserLogOut = () => {\n    return {type: LOG_OUT};\n}*/\n\nexport const setUserAuthImg = (img) => { /* not used */\n    return {type: SET_USER_IMG, img};\n}\nexport const setUserAuthCaptchaImg = (img) => {\n    return {type: SET_CAPTCHA_IMG, img};\n}\nexport const setUserAuthCaptchaAnswer = (ans) => {\n    return {type: SET_CAPTCHA_ANS, ans};\n}\n/*export const setUserAuthError = (err) => {\n    return {type: SET_ERROR, err};\n}*/\n\n// thunk-и\n\nexport const setCaptchaAnswer = (c) => async (dispatch) => {\n    // console.log('dsd')\n    // console.log(c)\n    dispatch(setUserAuthCaptchaAnswer(c));\n}\n\nexport const checkAuthorization = () => async (dispatch) => {\n\n    let data = await API.authMe();\n    if (data.resultCode === 0) {\n        let {id, login, email} = data.data;\n        dispatch(setUserAuthData(id, email, login, true, null, null, null));\n        // let resp2 = await API.getProfile(id);\n        // dispatch(setUserProfile(resp2.data));\n        // let data2 = await API.getStatus(id);\n        // dispatch(setUserStatus(data2));\n\n        let promise1 = await API.getProfile(id);\n        let promise2 = await API.getStatus(id);\n        let data3 = await Promise.all([promise1,promise2])\n            .then( () => {\n\n                dispatch(setUserProfile(promise1.data));\n                dispatch(setUserStatus(promise2));\n                // dispatch(setInitialized())\n            })\n\n\n    }\n}\n\n\nexport const logOut = () => async (dispatch) => {\n    await API.logOut()\n    // console.warn('logout2');\n    //dispatch(setUserLogOut());\n    dispatch(setUserAuthData(null, null, null, false, null, null, null));\n\n}\n\n\nexport const login = (email, pass, remember) => async (dispatch,getState) => {\n    let captcha = getState().auth.captchaAnswer;\n    let data = await API.auth(email, pass, remember, captcha);\n    // console.log(data)\n    if (data.resultCode === 0) {\n        // console.log('login +')\n        dispatch(checkAuthorization());\n\n    } else {\n        //dispatch(setUserAuthError(data.messages.join('<br/>')));\n\n        dispatch(stopSubmit('auth', {_error: data.messages.join('<br/>')}));\n\n        if (data.resultCode === 10) {\n            let data = await API.getCaptcha();\n                    dispatch(setUserAuthCaptchaImg(data.url));\n            // todo зробити виведення помилок - а треба?\n        }\n    }\n\n\n}","import React,{Suspense} from \"react\";\n// import {connect} from \"react-redux\";\nimport Preloader from \"../Preloader/Preloader\";\n\nexport const withSuspenseWrapper = (Component) => {\n    /*const SuspenseWrapper = (props) => {\n        return  <Suspense fallback={<Preloader/>}>\n            <Component {...props} />\n        </Suspense>;\n    }\n    return connect()(SuspenseWrapper)\n*/\n\n\n    return (props) => {\n        return <Suspense fallback={<Preloader/>}>\n            <Component {...props} />\n        </Suspense>;\n    }\n}\n","\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map( u => {\n        if(u[objPropName] === itemId){\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import {API} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst CHANGE_USER_FOLLOW_STATUS = 'samurai_project/users/CHANGE_USER_FOLLOW_STATUS';\nconst SET_USERS = 'samurai_project/users/SET_USERS';\nconst SET_INITIAL = 'samurai_project/users/SET_INITIAL';\nconst SET_PAGE_WITH_ME = 'samurai_project/users/SET_PAGE_WITH_ME';\nconst SET_TOTAL_USERS = 'samurai_project/users/SET_TOTAL_USERS';\nconst SET_CURRENT_PAGE = 'samurai_project/users/SET_CURRENT_PAGE';\nconst CHANGE_FETCHING_STATUS = 'samurai_project/users/CHANGE_FETCHING_STATUS';\nconst FOLLOWING_IN_PROGRESS = 'samurai_project/users/FOLLOWING_IN_PROGRESS';\n\nlet initialState = {\n    usersList: [],\n    usersPerPage: 20,\n    totalUsers: 0,\n    currentPage: 30,\n    isFetching: true,\n    followingIsInProgress: [],\n    fake: 0,\n    initial: 1,\n    pageWithMe: 0,\n    myId: 11583\n}\n\nconst users_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case \"FAKE\" :\n            return {...state, fake: state.fake + 1}\n        case CHANGE_USER_FOLLOW_STATUS:\n            return {\n                ...state,\n                usersList: updateObjectInArray(state.usersList,action.user_id, 'id', {followed: (action.followStatus === 1)} )\n                /*\n                usersList: state.usersList.map(u => { // перебір масиву користувачів\n                        if (u.id === action.user_id) {    // пошук по ID\n                            if (action.followStatus === 1) {\n                                //console.log(u.id + ' - ' + action.user_id)\n                                return {\n                                    ...u,   // копіюємо самого користувача\n                                    followed: true  // змінюємо статус follow\n                                }\n                                // console.log(newU);\n                            }\n                            if (action.followStatus === 0) {\n                                //console.log(u.id + ' - ' + action.user_id)\n                                return {\n                                    ...u,\n                                    followed: false\n                                }\n                                // console.log(newU);\n                            }\n                        }\n                        return u;\n                    }\n                )\n*/\n\n            }\n\n        // console.log(stateCopy)\n        // return stateCopy\n        case SET_USERS:\n            return {\n                ...state,\n                usersList: [...action.users]\n            }\n        case SET_PAGE_WITH_ME:\n            return {\n                ...state,\n                pageWithMe: action.pageWithMe\n            }\n        case SET_INITIAL:\n            return {\n                ...state,\n                initial: action.initial\n            }\n        case SET_TOTAL_USERS:\n            // debugger\n            return {\n                ...state,\n                totalUsers: action.total\n            }\n        case SET_CURRENT_PAGE:\n            // debugger\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case CHANGE_FETCHING_STATUS:\n            // debugger\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case FOLLOWING_IN_PROGRESS:\n            // debugger\n            return {\n                ...state,\n                followingIsInProgress: action.followingIsInProgress\n                    ? [...state.followingIsInProgress, action.userId]\n                    : state.followingIsInProgress.filter(id => id !== action.userId)\n            }\n\n        default:\n            return state;\n        //break;\n\n    }\n\n}\n\nexport default users_reducer;\n\n\nexport const changeUserFollowStatus = (user_id, followStatus) => {\n    return {type: CHANGE_USER_FOLLOW_STATUS, user_id: user_id, followStatus: followStatus};\n}\n\n\nexport const setUsers = (users) => {\n    return {type: SET_USERS, users: users};\n}\nexport const setPageWithMe = (pageWithMe) => {\n    return {type: SET_PAGE_WITH_ME, pageWithMe: pageWithMe};\n}\nexport const setInitial = (initial) => {\n    return {type: SET_INITIAL, initial: initial};\n}\nexport const setTotalUsers = (total) => {\n    return {type: SET_TOTAL_USERS, total: total};\n}\nexport const setCurrentPage = (currentPage) => {\n    //console.log(currentPage)\n    //console.log('111')\n    return {type: SET_CURRENT_PAGE, currentPage: currentPage};\n}\nexport const setFetchingStatus = (isFetching) => {\n    //console.log(currentPage)\n    return {type: CHANGE_FETCHING_STATUS, isFetching: isFetching};\n}\nexport const setFollowingInProgress = (followingIsInProgress, userId) => {\n    //console.log(currentPage)\n    return {type: FOLLOWING_IN_PROGRESS, followingIsInProgress, userId};\n}\n\n\n// thunk-и\n// export const getUsers = (usersPerPage = 20, currentPage = 229) => async (dispatch) => {\nexport const getUsers = (usersPerPage = 20, currentPage  = 0) => async (dispatch) => {\n\n    // console.log('curpage__reducer = ' + currentPage)\n    dispatch(setFetchingStatus(true));\n\n    if(currentPage === 0){\n        currentPage = 1;\n    }else{\n        dispatch(setCurrentPage(currentPage));\n    }\n    /*\n    if(initial === 1){\n        // first request to get to know total and calculate current page with ME\n        dispatch(setInitial(2));\n    }else if(initial === 2){\n        // second request to get current page with ME\n        dispatch(setInitial(0));\n    }else{\n        // all other requests - if page is set - get that page, else get page with ME\n        // every time calculate page with ME\n    }\n    */\n\n    //this.props.setFetchingStatus(true);\n    let data = await API.getUsers(usersPerPage, currentPage);\n    // .then(data => {\n    // debugger\n\n    // if(currentPage === 255){\n    //     data = await API.getUsers(usersPerPage, currentPage, data.totalCount);\n    // }\n\n    dispatch(setFetchingStatus(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsers(data.totalCount));\n    // console.log('cp - '+data.cp)\n\n\n\n    // dispatch(setInitial(initial));\n    // dispatch(setPageWithMe(2));\n\n\n    // this.props.totalUsers = resp.data.totalCount\n    // console.log(resp)\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}\n\nexport const follow = (id, followToggle) => async (dispatch) => {\n\n    //dispatch(setFetchingStatus(true));\n\n\n    dispatch(setFollowingInProgress(true, id));\n\n    if (followToggle) { // follow\n\n\n        let data = await API.follow(id);\n        // .then(data => {\n        // debugger\n        if (data.resultCode === 0) { // чи потрібно?\n\n            //props.setFetchingStatus(false);\n            dispatch(changeUserFollowStatus(id, 1));\n            dispatch(setFollowingInProgress(false, id));\n\n\n            //props.setUsers(resp.data.items)\n            //props.setTotalUsers(resp.data.totalCount)\n            // props.totalUsers = resp.data.totalCount\n            console.log(data)\n            //console.log('ffffff')\n        } else {\n            // error\n        }\n        // })\n        //\n        // .catch(error => {\n        //     console.warn(error);\n        // });\n    } else { // unfollow\n        let resp = await API.unfollow(id)\n        // .then(resp => {\n        // debugger\n        //props.setFetchingStatus(false);\n        dispatch(changeUserFollowStatus(id, 0));\n        dispatch(setFollowingInProgress(false, id));\n\n\n        //props.setUsers(resp.data.items)\n        //props.setTotalUsers(resp.data.totalCount)\n        // props.totalUsers = resp.data.totalCount\n        console.log(resp)\n        // })\n        //\n        // .catch(error => {\n        //     console.warn(error);\n        // });\n    }\n\n\n}\n\n\n// export const newChatPostChangeActionCreator = (text) => {\n//     return {type: NEW_CHAT_POST_CHANGE, changedText: text};\n// }\n// export const gETChatNEWPOSTTEXTActionCreator = () => {\n//     return {type: GET_CHAT_NEW_POST_TEXT};\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore,compose} from \"redux\";\nimport gb_reducer from \"./gb_reducer\";\nimport chat_reducer from \"./chat_reducer\";\nimport examples_reducer from \"./examples_reducer\";\nimport users_reducer from \"./users_reducer\";\nimport profile_reducer from \"./profile_reducer\";\nimport auth_reducer from \"./auth_reducer\";\nimport thunkMiddleware from \"redux-thunk\"\n//import { composeWithDevTools } from 'redux-devtools-extension';\nimport {reducer as formReducer} from \"redux-form\";\nimport app_reducer from \"./app_reducer\";\n\nlet reducers = combineReducers({\n    gb: gb_reducer,\n    chat: chat_reducer,\n    examples: examples_reducer,\n    users: users_reducer,\n    profilePage: profile_reducer,\n    auth: auth_reducer,\n    form: formReducer,\n    app: app_reducer\n})\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\n\n\n// let store = createStore(reducers,applyMiddleware(thunkMiddleware));\n//let store = createStore(reducers,composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport c from './Menu.module.css'\nimport { NavLink} from \"react-router-dom\";\n\nconst Menu = ({href,text}) => {\n\n    return (\n\n            <div className={c.menu}><NavLink to={href} activeClassName={c.active}>{text}</NavLink></div>\n    );\n\n    /*\n        return (<nav>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Відгуки</a></div>\n          <div className=\"menu\"><a href=\"#\">Замовити скрипт</a></div>\n          <div className=\"menu\"><a href=\"#\">Контакти</a></div>\n          <div className=\"menu\"><a href=\"#\">Фідбек</a></div>\n          <div className=\"menu\"><a href=\"#\">Оплата</a></div>\n          <div className=\"menu\"><a href=\"#\">Чат</a></div>\n          <div className=\"menu\"><a href=\"#\">FreeWare</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n        </nav>\n        );\n    */\n\n}\n\nexport default Menu;","import React from 'react';\nimport Menu from './Menu/Menu';\n\nconst Nav = () => {\n    return (\n\n            <nav>\n                {/*<Menu text=\"Main\" href=\"/index\"/>*/}\n                <Menu text=\"Examples\" href=\"/examples\"/>\n                <Menu text=\"Guest Book\" href=\"/gb\"/>\n                <Menu text=\"Chat\" href=\"/chat\"/>\n                <Menu text=\"Users\" href=\"/users\"/>\n                <Menu text=\"Profile\" href=\"/profile\"/>\n                {/*<Menu text=\"...\" href=\"/out/14\"/>*/}\n            </nav>\n    );\n\n    /*\n        return (<nav>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Відгуки</a></div>\n          <div className=\"menu\"><a href=\"#\">Замовити скрипт</a></div>\n          <div className=\"menu\"><a href=\"#\">Контакти</a></div>\n          <div className=\"menu\"><a href=\"#\">Фідбек</a></div>\n          <div className=\"menu\"><a href=\"#\">Оплата</a></div>\n          <div className=\"menu\"><a href=\"#\">Чат</a></div>\n          <div className=\"menu\"><a href=\"#\">FreeWare</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n          <div className=\"menu\"><a href=\"#\">Гостьова</a></div>\n        </nav>);\n    */\n\n}\n\nexport default Nav;","import React from 'react';\nimport c from './Example.module.css';\n\nconst Examples = (props) => {\n  return (\n\n      <div>\n          <h1>Приклади моїх робіт</h1>\n\n          {props.examples.map(e =>\n              <div key={e.id} className={c.example}>\n                  <a href={e.link} title={e.descr}>{e.title}</a>\n              </div>\n\n          // <Example\n          //     key={e.id}\n          //     id={e.id}\n          //     link={ e.link}\n          //     title={e.title}\n          //     descr={e.descr}\n          //     date={e.date}\n          // />\n\n          )}\n      </div>\n\n\n  );\n}\n\nexport default Examples;\n\n","import {connect} from \"react-redux\";\nimport {getExamples} from \"../../redux/examples_reducer\";\nimport React, {useEffect} from \"react\"\nimport Examples from \"./Example/Examples\";\n// import {useEffect} from \"react/cjs/react.production.min\";\n\nconst ExamplesContainer = ({getExamples,examples}) => {\n    useEffect( () => {\n        getExamples();\n    },[]); // якщо написати [examples], то скрипт буде бомбити сервер запитами \"чи не змінились екзампли\"\n\n    return <Examples examples={examples.examplesList}/>;\n}\n/*\n\nclass ExamplesContainer extends React.Component{\n\n    componentDidMount = () => {\n        this.props.getExamples();\n    }\n\n    render(){\n        return (\n            <Examples examples={this.props.examples.examplesList}/>\n        );\n    }\n}\n*/\n\nlet mapStateToProps = (state) => {\n    // console.warn(state);\n    return {\n        examples: state.examples,\n    }\n}\n\n\nexport default connect(mapStateToProps, {getExamples})(ExamplesContainer)\n","import React, {lazy} from 'react';\nimport c from './Main.module.css';\nimport {Redirect, Route, Switch} from \"react-router-dom\";\n// import ChatContainer from \"../Chat/ChatContainer\";\n// import GuestBookContainer from \"../GuestBook/GuestBookContainer\";\nimport ExamplesContainer from \"../Examples/ExamplesContainer\";\n// import Users from \"../Users/Users\";\n// import UsersContainer from \"../Users/UsersContainer\";\n// import ProfileContainer from \"../Profile/ProfileContainer\";\n// import Login from \"../Login/Login\";\n// import MyProfile from \"../Profile/MyProfile\";\nimport {withSuspenseWrapper} from \"../hoc/withSuspenseWrapper\";\n\n// ленивая загрузка компонентов\nconst ChatContainer = lazy(() => import ('../Chat/ChatContainer'));\nconst GuestBookContainer = lazy(() => import ('../GuestBook/GuestBookContainer'));\nconst Login = lazy(() => import ('../Login/Login'));\nconst MyProfile = lazy(() => import ('../Profile/MyProfile'));\nconst ProfileContainer = lazy(() => import ('../Profile/ProfileContainer'));\nconst UsersContainer = lazy(() => import ('../Users/UsersContainer'));\n\nconst Main = () => {\n    return (\n        <div className={c.main}>\n            <Switch>\n                <Route path='/examples' render={() => (\n                    <ExamplesContainer/>\n                )}/>\n                {/*<Route exact path='/' render={() => ( <ExamplesContainer/> )}/>*/}\n                <Route exact path='/' render={() => (<Redirect to={'/examples'}/>)}/>\n                <Route path='/index' render={() => (<Redirect to={'/examples'}/>)}/>\n                {/*<Route path='/index' render={() => (<ExamplesContainer/>)}/>*/}\n                <Route path='/gb' render={withSuspenseWrapper(GuestBookContainer)}/>\n                <Route path='/chat' render={withSuspenseWrapper(ChatContainer)}/>\n                <Route path='/users' render={withSuspenseWrapper(UsersContainer)}/>\n                <Route path='/profile/:userID?' render={withSuspenseWrapper(ProfileContainer)}/>\n                <Route path='/myprofile' render={withSuspenseWrapper(MyProfile)}/>\n                <Route exact path='/login/facebook' render={() => <div>From FaceBook</div>}/>\n                <Route path='/login' render={withSuspenseWrapper(Login)}/>\n                <Route path='/reg' render={withSuspenseWrapper(Login)}/>\n                <Route path='*' render={() => <div>404 <br/>Page Not Found</div>}/>\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport c from './Footer.module.css';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className={c.copy}>\n        &copy; wd<br />\n        * 2011-2024 *\n      </div>\n      <div className={c.theme}>\n        день / ніч\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport c from './Header.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport logout from \"../../images/logout.png\"\n\n\n\nconst Header = ({logOut,auth}) => {\n\n    return <header>\n        <img src=\"https://wd.co.ua/pic/wd_logo_sh_transparent.png\" className={c.logo} alt='alt'/>\n\n        <div className={c.auth}>\n\n            {auth.isAuth\n                ? <div>\n                    <NavLink to={'/myprofile'}>\n                        {auth.login}\n                    </NavLink>\n                    <img src={logout} alt='logout' title='вийти' className={c.logout} onClick={logOut}/>\n                    {/*<LogOutFormRedux {...props} onSubmit={onSubmit} />*/}\n                </div>\n\n                : <div>\n                <NavLink to={'/reg'}>\n                    <button id=\"reg\">Реєстрація</button>\n                </NavLink> <NavLink to={'/login'}>\n                <button id=\"enter\">Вхід</button>\n            </NavLink>\n            </div>}\n\n        </div>\n    </header>\n}\n\nexport default Header;","import React from 'react';\nimport Header from \"./Header\";\nimport {checkAuthorization, logOut, setUserAuthData, setUserAuthImg} from \"../../redux/auth_reducer\";\nimport {connect} from \"react-redux\";\n\nconst HeaderContainer = (props) => {\n    return <Header {...props} />\n}\n/*\nclass HeaderContainer2 extends React.Component{\n    render(){\n        return <Index {...this.props} />\n    }\n}*/\n\nconst mapStateToProps = ({auth}) => {\n    return {\n        auth: auth\n    }\n};\n\nexport default connect(mapStateToProps,{setUserAuthData,setUserAuthImg,checkAuthorization, logOut})(HeaderContainer);","import React, {useEffect} from \"react\";\nimport c from \"./ErrorsShower.module.css\"\nimport {setMainError, settingMainError} from \"../../redux/app_reducer\";\n\nconst ErrorsShower = (props) => {\n    if (props.mainError !== null && props.mainError !== ''){\n        // debugger\n        window.setTimeout(()=>{props.settingMainError(null)},10000)\n        return <div className={c.errors}>Ошибка:<br/> {props.mainError}</div>\n    }\n    else\n        return ''\n}\n\nexport default ErrorsShower;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport ErrorsShower from \"../ErrorsShower/ErrorsShower\";\nimport {settingMainError} from \"../../redux/app_reducer\";\n\nlet mapStateToProps = ({app}) => {\n    return {\n        mainError: app.mainError\n    }\n}\n\nexport const withErrorsShowerWrapper = (Component) => {\n\n    const ErrorsShowerWrapper = (props) => {\n        // if(!props.isAuth) return <Redirect to={'/login'}/>;\n        return <div>\n            <Component {...props} />\n            <ErrorsShower mainError={props.mainError} settingMainError={props.settingMainError}/>\n        </div>;\n    }\n    /*\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props} />;\n        }\n    }*/\n\n    return connect(mapStateToProps)(ErrorsShowerWrapper)\n}\n","import React, {useEffect} from \"react\";\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport Main from './components/Main/Main';\nimport Footer from './components/Footer/Footer';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {BrowserRouter, HashRouter, withRouter} from \"react-router-dom\";\nimport {initializeApp, setMainError, settingMainError} from \"./redux/app_reducer\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\nimport {getUsers, setPageWithMe} from \"./redux/users_reducer\";\nimport {withErrorsShowerWrapper} from \"./components/hoc/withErrorsShowerWrapper\";\n\n\nconst catchAllUnhandledErrors = (event) => {\n     // console.log(reason)\n     // console.log(promise)\n    // event.preventDefault()\n    // promise.preventDefault()\n    // alert('test')\n}\nconst App = ({initializeApp, initialized, total, usersPerPage, getUsers, setPageWithMe, userid}) => {\n\n\n    useEffect(() => {\n        // like componentDidMount and componentDidUpdate\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors);\n\n        // Указываем, как сбросить этот эффект:\n        // like componentWillUnmount\n        return function cleanup() {\n            window.removeEventListener('unhandledrejection', catchAllUnhandledErrors);\n        };\n    })\n    useEffect(() => {\n\n        // console.log('total - ' + total);\n        // console.log('initialized - ' + initialized);\n        if (total !== 0) {\n\n            // 76\n            // 6590\n            let currentPage2 = 1;\n\n            if (userid === 11583) // wd\n                currentPage2 = Math.ceil((total - 6590) / usersPerPage);\n            else if (userid === 1079) // test\n                currentPage2 = Math.ceil((total - 76) / usersPerPage);\n\n            // console.log('userid - ' + userid);\n            // console.log('currentPage2 - ' + currentPage2);\n\n            getUsers(usersPerPage, currentPage2);\n        } else {\n            initializeApp();\n        }\n\n    }, [total]);\n\n    return !initialized\n        ? <Preloader/>\n        : <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <Nav/>\n            <Main/>\n            <Footer/>\n\n        </div>\n}\n/*\n\nclass App extends React.Component {\n\n    componentDidMount() {\n\n        this.props.initializeApp();\n\n    }\n\n    render() {\n\n        return !this.props.initialized\n            ? <Preloader />\n            : <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Nav/>\n                <Main/>\n                <Footer/>\n\n            </div>\n    }\n}\n*/\n\nconst mapStateToProps = (store) => {\n    // debugger\n    return {\n        initialized: store.app.initialized,\n        initial: store.users.initial,\n        pageWithMe: store.users.pageWithMe,\n        myId: store.users.myId,\n        total: store.users.totalUsers,\n        usersPerPage: store.users.usersPerPage,\n        currentPage: store.users.currentPage,\n        userid: store.auth.userID,\n    }\n};\n\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp, getUsers, setPageWithMe,settingMainError}),withErrorsShowerWrapper)(App);\n\n\nconst SamuraiJsApp = () => {\n\n\n    // return <BrowserRouter>\n    //     <Provider store={store}>\n    //         <AppContainer />\n    //     </Provider>\n    // </BrowserRouter>\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </HashRouter>\n}\n\n\nexport default SamuraiJsApp\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider}  from \"react-redux\";\nimport SamuraiJsApp from \"./App\";\n\n/*\nsetInterval(() => {\n    store.dispatch({type:\"FAKE\"})\n}, 1000)\n*/\n\n    ReactDOM.render(\n        <SamuraiJsApp />, document.getElementById('root')\n    );\n\n\n\nserviceWorker.unregister();\n","import {API} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {settingMainError} from \"./app_reducer\";\n// import {checkAuthorization, setUserAuthCaptchaImg} from \"./auth_reducer\";\n// import {getExamples} from \"./examples_reducer\";\n// import {setInitialized} from \"./app_reducer\";\n\nconst SET_USER_PROFILE = 'samurai_project/profile/SET_USER_PROFILE';\nconst SET_USER_STATUS = 'samurai_project/profile/SET_USER_STATUS';\nconst UPD_USER_PHOTOS = 'samurai_project/auth/UPD_USER_PHOTOS';\nconst SET_PROFILE_UPDATED = 'samurai_project/auth/SET_PROFILE_UPDATED';\n\nlet initialState = {\n    profile: null,\n    status: \"\",\n    profileUpdatedToggle: false\n}\n\nconst profile_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case SET_USER_PROFILE:\n            //console.log('reduser ' + action.profile)\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_USER_STATUS:\n\n            return {\n                ...state,\n                status: action.status\n            }\n        case UPD_USER_PHOTOS:\n\n            return {\n                ...state,\n                profile: {...state.profile,\n                photos: action.photos},\n            }\n        case SET_PROFILE_UPDATED:\n\n            return {\n                ...state,\n                profileUpdatedToggle: action.status,\n            }\n\n        default:\n            return state;\n        //break;\n\n    }\n\n}\n\nexport default profile_reducer;\n\n\nexport const setUserProfile = (profileData) => {\n    let profile = profileData.data;\n    return {type: SET_USER_PROFILE, profile};\n}\nexport const setProfileUpdated = (status) => {\n    return {type: SET_PROFILE_UPDATED, status};\n}\nexport const setUserStatus = (status) => {\n    return {type: SET_USER_STATUS, status};\n}\n/*export const updateProfilePhoto2 = (photo) => {\n    return {type: SET_USER_STATUS, photo};\n}*/\nexport const updateProfilePhotos = (photosData) => {\n    let photos = photosData.data.photos\n    return {type: UPD_USER_PHOTOS, photos};\n}\n\n\n\n/***** helpers *****/\nconst dispatcher = async (dispatch,promises = [],functions = [],text = '') => {\n    await Promise.all(promises)\n        .then( () => {\n            promises.map(p => {\n                if ((p.status || p.statusText) && p.status > 399)\n                    dispatch(settingMainError(text + p.status + ' ' + p.statusText));\n                else{\n                    functions.map(f => {\n                        dispatch(f(p));\n                    })\n                }\n\n            })\n\n        })\n}\n\nconst deCapitalizeFirstLetter = (string) => {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nconst parseErrors = (e) => {\n    let erObj = {};\n    e.map((er)=> {\n        let re = /(.*)\\((.*)\\)/i;\n        let found = er.match(re);\n        if(found !== null && found[0].length > 0){ // if found anything\n            let re2 = /\\-\\>(.*)/\n            let found2 = found[2].match(re2);\n            if(found2 !== null && found2[1].length > 0){ // if found arrow\n                // console.log(deCapitalizeFirstLetter(found2[1]))\n                let name = deCapitalizeFirstLetter(found2[1])\n                erObj[name]= found[1];\n            }else{\n                // console.log(deCapitalizeFirstLetter(found[2]))\n                let name = deCapitalizeFirstLetter(found[2])\n                erObj[name] = found[1];\n            }\n\n        }\n    })\n    return erObj;\n}\n\n// thunk-и\n\nexport const getProfile = (id) => async (dispatch,getState) => {\n\n    const userId = getState().auth.userID;\n\n    //console.log('thunk - ' + id)\n    let promise = await API.getProfile(!id ? userId : id);\n    await dispatcher(dispatch,[promise],[setUserProfile],'Ошибка получения профиля');\n    // await Promise.all([promise])\n    //     .then( () => {\n    //         if (promise.status || promise.statusText)\n    //             dispatch(settingMainError('Ошибка получения профиля - ' + promise.status + ' ' + promise.statusText));\n    //         else\n    //             dispatch(setUserProfile(promise.data));\n    //  })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}\n\nexport const getStatus = (id) => async (dispatch,getState) => {\n    const userId = getState().auth.userID;\n    let promise = await API.getStatus(!id ? userId : id);\n    await dispatcher(dispatch,[promise],[setUserStatus],'Ошибка получения статуса - ');\n    // await Promise.all([promise])\n    //     .then( () => {\n    //         if (promise.status || promise.statusText)\n    //             dispatch(settingMainError('Ошибка получения статуса - ' + promise.status + ' ' + promise.statusText));\n    //         else\n    //             dispatch(setUserStatus(promise));\n    //     })\n    // .then(data => {\n    //const {resultCode} = data;\n    //if(resultCode === 0 || resultCode === undefined){ // експериментально\n    //}\n\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}\n\n/*export const updateProfilePhoto = (photo) => async (dispatch) => {\n    let data = await API.updateProfilePhoto(photo);\n    dispatch(setUserStatus(data));\n}*/\n\n\nexport const updateProfilePhoto = (photoFile) => async (dispatch) => {\n    // await API.updateProfilePhoto(photoFile)\n    // console.warn(photoFile);\n    let promise = await API.updateProfilePhoto(photoFile);\n    await dispatcher(dispatch,[promise],[updateProfilePhotos],'Ошибка установки фото профиля - ');\n    // await Promise.all([promise])\n    //     .then( () => {\n    //         if(promise.status || promise.statusText)\n    //             dispatch(settingMainError('Ошибка установки фото профиля - ' + promise.status + ' ' + promise.statusText));\n    //         else\n    //             dispatch(updateProfilePhotos(promise.data.photos));\n    //     })\n    // console.warn(out);\n    //dispatch(setUserLogOut());\n\n}\n\n\nexport const setStatus = (status) => async (dispatch) => {\n    let promise = await API.setStatus(status)\n    await dispatcher(dispatch,[promise],[],'Ошибка установки статуса - ')\n        .then(()=>{\n            dispatch(setUserStatus(status));\n        });\n\n\n    // await Promise.all([promise])\n    //     .then( () => {\n    //         // console.log(promise1.status)\n    //         // console.log(promise1.statusText)\n    //\n    //         if(promise.status || promise.statusText)\n    //             dispatch(settingMainError('Ошибка установки статуса - ' + promise.status + ' ' + promise.statusText));\n    //         else\n    //             dispatch(setUserStatus(status));\n    //     })\n        // .catch((err)=>{ // no need\n        //     dispatch(settingMainError('Ошибка установки статуса'));\n        // })\n}\n\nexport const updateProfile = (profileObj) => async (dispatch,getState) => {\n\n    console.log('updateProfile - 1')\n    console.log(profileObj)\n    const userId = getState().auth.userID;\n    // console.log('updateProfile - 2')\n\n    let promise = await API.updateProfile(profileObj);\n    await Promise.all([promise])\n        .then( () => {\n            // console.log(promise1.status)\n            // console.log(promise1.statusText)\n\n            if ((promise.status || promise.statusText) && promise.status > 399)\n                dispatch(settingMainError('Ошибка обновления профиля - ' + promise.status + ' ' + promise.statusText));\n            else {\n\n                if (promise.resultCode === 0) {\n                    // console.log('updateProfile +')\n                    // dispatch(checkAuthorization());\n                    //  dispatch(getProfile(profileObj.userId));\n\n                    dispatch(getProfile(userId));\n                    dispatch(setProfileUpdated(true));\n                    //\n                    // let data = await Promise.all([promise1,promise2])\n                    //     .then( () => {\n                    //         console.log('finita')\n                    //     })\n\n                } else {\n                    //dispatch(setUserAuthError(data.messages.join('<br/>')));\n\n                    /*\n                            let str = 'Invalid url format (Contacts->Facebook)';\n                            let re = /\\((.*)\\)/i;\n                            let found = str.match(re);\n                            if(found !== null && found[0].length > 0){\n                                let re2 = /\\-\\>(.*)\\)/\n                                let found2 = found[0].match(re2);\n                                if(found2 !== null && found2[1].length > 0){\n                                    console.log(found2[1].toLowerCase())\n                                }else{\n                                    console.log(found[1].toLowerCase())\n                                }\n\n                            }*/\n\n\n                    // console.log(data.messages)\n                    let errObj = parseErrors(promise.messages);\n                    // console.log(testObj)\n                    // dispatch(stopSubmit('profileEdit', {_error: data.messages.join('|||')}));\n                    // dispatch(stopSubmit('profileEdit', {'instagram': data.messages[0],'vk': data.messages[1]}));\n                    dispatch(stopSubmit('profileEdit', errObj));\n                    // return Promise.reject(data.messages.join('|||'));\n                    // dispatch(stopSubmit('profileEdit', {}));\n                    /*\n                            if (data.resultCode === 10) {\n                                let data = await API.getCaptcha();\n                                dispatch(setUserAuthCaptchaImg(data.url));\n                                // todo зробити виведення помилок - а треба?\n                            }*/\n                }\n            }\n        })\n    // .then(data => {\n    //dispatch(setUserStatus(status));\n    // console.log('updateProfile + ' + data.resultCode)\n    // console.log('updateProfile + ' + data.data)\n    // console.log(data)\n\n\n\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}","import {API} from \"../api/api\";\n\nlet initialState = {\n    examplesList: [\n        // {id:1,name:'Галерея'},\n        // {id:2,name:'Страховой калькулятор'},\n    ]\n}\n\nconst SET_EXAMPLES = 'samurai_project/examples/SET_EXAMPLES';\nconst DEL_EXAMPLE = 'samurai_project/examples/DEL_EXAMPLE';\nconst ADD_EXAMPLE = 'samurai_project/examples/ADD_EXAMPLE';\n\nconst examples_reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        // case GET_EXAMPLES:\n        //     return state;\n        //     break;\n        case SET_EXAMPLES:\n            // debugger\n            return {\n                ...state,\n                // examplesList: [...state.examplesList, ...action.examples]\n                examplesList: [...action.examples]\n            }\n        case DEL_EXAMPLE:\n            // debugger\n            return {\n                ...state,\n                // examplesList: [...state.examplesList, ...action.examples]\n                examplesList: state.examplesList.filter(ex => ex.id !== action.id)\n            }\n        case ADD_EXAMPLE:\n            // debugger\n            return {\n                ...state,\n                // examplesList: [...state.examplesList, ...action.examples]\n                examplesList: [...state.examplesList, action.example]\n            }\n        default:\n            return state;\n        //break;\n\n    }\n\n    //return state;\n}\n\nexport default examples_reducer;\n\n\nexport const setExamples = (examples) => {\n    return {type: SET_EXAMPLES, examples: examples};\n}\n\nexport const delExample = (id) => {\n    return {type: DEL_EXAMPLE, id};\n}\n\nexport const addNewExample = (example) => {\n    return {type: ADD_EXAMPLE, example};\n}\n\n\n// thunk-и\n\nexport const getExamples = () => async (dispatch) => {\n\n    let data = await API.getExamples()\n    // .get('https://social-network.samuraijs.com/api/1.0/users/?count=20&page=250')\n    // .then(data => {\n    // debugger\n    dispatch(setExamples(data.items))\n    // console.log(resp)\n    // })\n    //\n    // .catch(error => {\n    //     console.warn(error);\n    // });\n\n}","module.exports = __webpack_public_path__ + \"static/media/kotigoroshko.70d84a67.jpg\";","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport preloader from \"../../images/rings.svg\";\n\nconst Preloader = () =>{\n    return <div>\n        <img src={preloader} alt={'loading...'} style={{width: 150+'px'}} />\n    </div>\n}\n/*\nclass Preloader extends React.Component{\n    render(){\n        return <div>\n            <img src={preloader} alt={'loading...'} style={{width: 150+'px'}} />\n        </div>\n    }\n}*/\n\nexport default connect()(Preloader)","import * as axios from \"axios\";\n// import {setCurrentPage} from \"../redux/users_reducer\";\n\nlet apiKey = 'c5115442-0621-432c-8b99-a8efe085eda6'\n// let apiKey = '3db08625-24f8-429d-8bdb-ea405db0921e'\n// baseURL = 'https://wd.co.ua/api.php'\nlet baseURL = 'https://social-network.samuraijs.com/api/1.0/'\n// currPage = 4\nexport let instance = axios.create({\n    withCredentials: true,\n    baseURL: baseURL,\n    headers: {\n        'API-KEY': apiKey\n    }\n\n});\n\n\n/*********************************************************/\n\n\nlet apiKey2 = 'ada3692f-cdc4-4c82-9079-5847319d88fc';\nlet baseURL2 = 'https://wd.co.ua/api.php';\n\nexport const instance2 = axios.create({\n    withCredentials: true,\n    baseURL: baseURL2,\n    headers: {\n        'API-KEY': apiKey2\n    }\n\n});\n\nexport const API = {\n\n\n    getUsers(usersPerPage = 10, currentPage = 5) {\n/*\n        if((currentPage === -1 || currentPage === 255) && total !== -1){\n            currentPage = Math.ceil((total - 6590) / usersPerPage);\n\n            //setCurrentPage(currentPage);\n        }\n        if(currentPage === -1){\n            currentPage = 229;\n\n            //setCurrentPage(currentPage);\n        }*/\n        return instance\n            .get('users/?count=' + usersPerPage + '&page=' + currentPage)\n            .then(resp => {\n                    //console.log(resp);\n                    //resp.data.cp = currentPage;\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    follow(id) {\n        return instance\n            .post('follow/' + id)\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    unfollow(id) {\n        return instance\n            .delete('follow/' + id)\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    async authMe() {\n        return instance\n            .get('auth/me')\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n\n\n\n    },\n\n    getProfile(id) {\n\n        return instance\n            .get('profile/' + id)\n            .then(resp => {\n                    return resp\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    getStatus(id) {\n        return instance\n            .get('profile/status/' + id)\n            .then(resp => {\n                    return resp.data\n                }\n            ).catch((error) => {\n                console.log(error)\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    setStatus(status) {\n        return instance\n            .put('profile/status/', {\n                status: status\n            })\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            })\n            //.done(); // destroys promise\n    },\n\n\n    updateProfile(profileObj) {\n        return instance\n            .put('profile', profileObj/*{\n                userId: 11583,\n                lookingForAJob: false,\n                lookingForAJobDescription: 'уже есть',\n                fullName: 'WD',\n                aboutMe: 'Димыч, курсы - агонь!!!',\n                contacts: {\n                    github: '',\n                    vk: '',\n                    facebook: '',\n                    instagram: '',\n                    twitter: '',\n                    website: 'localhost.com',\n                    youtube: '',\n                    mainLink: '',\n                }\n            }*/)\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    async updateProfilePhoto(photo) {\n        // https://docs.google.com/document/d/1ZSXmTzkgq_Kj1VbWuq8fTv_DPD95GFDvPZgqFeIYGoM/edit#heading=h.nnpkrs1rgfrd\n\n        const formData = new FormData();\n        formData.append('image', photo)\n        return instance\n            .put('profile/photo', formData,{ headers: {\"Content-Type\": \"multipart/form-data\" }})\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n        // return resp.data;\n    },\n\n\n    auth(email, pass, remember = true, captcha = false) {\n        // console.log(email, pass, remember, captcha)\n        return instance\n            .post('auth/login', {\n                email: email,\n                password: pass,\n                rememberMe: remember,\n                captcha: captcha,\n\n            })\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    logOut() {\n        // console.log('logout1')\n        return instance\n            .delete('auth/login')\n            .then(resp => {\n                    // console.log('logout')\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n\n    getCaptcha() {\n        return instance\n            .get('security/get-captcha-url')\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n\n    getExamples() {\n        return instance2\n            .get('?action=get_examples')\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    },\n\n    getGbPosts() {\n        return instance2\n            .get('?action=get_gb_posts')\n            .then(resp => {\n                    return resp.data\n                }\n            )\n            .catch(error => { // catches errors\n                return error.response\n                // error handling, use error.response to access the non 2xx response\n            });\n    }\n}","import {API} from \"../api/api\";\n\nconst NEW_GB_POST_CHANGE = 'samurai_project/gb/NEW_GB_POST_CHANGE';\nconst ADD_GB_POST = 'samurai_project/gb/ADD_GB_POST';\nconst SET_GB_POSTS = 'samurai_project/gb/SET_GB_POSTS';\nconst DEL_GB_POST = 'samurai_project/gb/DEL_GB_POST';\n\nlet initialState = {\n    gbPosts: [\n        // {id: 1, text: 'перший пост', author: 'Вано', authorID: '177', authorAva: 'https://avatarfiles.alphacoders.com/576/57620.jpg', date: '02:15 05-07-2020'},\n        // {id: 2, text: 'пост №2', author: 'Марічка', authorID: '65', authorAva: 'https://avatarfiles.alphacoders.com/111/111521.png', date: '02:16 05-07-2020'},\n        // {id: 3, text: 'третій', author: 'Гоги', authorID: '443', authorAva: 'https://store.playstation.com/store/api/chihiro/00_09_000/container/UA/ru/999/EP3351-CUSA08250_00-AV00000000000128/1580140059000/image?w=240&h=240&bg_color=000000&opacity=100&_version=00_09_000', date: '02:17 05-07-2020'},\n        // {id: 4, text: 'довгий 4-й пост для тесту, просто для тестууууу айл бі бек)))!!!11', author: 'Андрійко', authorID: '323', authorAva: 'https://avatarmaker.net/free-avatars/images/samurai.jpg', date: '02:18 05-07-2020'},\n\n    ],\n    newPostText: 'hi how are u?))',\n\n\n}\n\nconst gb_reducer = (state = initialState,action) => {\n    //debugger;\n\n    switch (action.type){\n\n        case ADD_GB_POST:\n            let d = new Date();\n            let time = parseInt(d.getTime()/1000);\n\n            let newPost = {\n                /*\n                    id: state.gbPosts.length + 1,\n                    text: action.text,\n                    author: 'Марічка',\n                    authorID: '65',\n                    authorAva: 'https://avatarfiles.alphacoders.com/111/111521.png',\n                    date: '02:16 23-07-2020',\n                */\n                answer: \"\",\n                answer_time: \"0\",\n                email: \"ddddd@mail.com\",\n                id: state.gbPosts.length + 1,\n                ip: \"\",\n                login: \"Марічка\",\n                status: \"1\",\n                text: action.text,\n                time: time,\n                ua: \"\"\n\n\n            }\n            return {\n                ...state,\n                gbPosts: [...state.gbPosts,newPost],\n                newPostText: ''\n            }\n\n        case NEW_GB_POST_CHANGE:\n            return {\n                ...state,\n                newPostText: action.changedText\n            }\n        case SET_GB_POSTS:\n            return {\n                ...state,\n                // gbPosts: [...state.gbPosts,...action.posts],\n                gbPosts: [...action.posts],\n            }\n        case DEL_GB_POST:\n            return {\n                ...state,\n                // gbPosts: [...state.gbPosts,...action.posts],\n                gbPosts: state.gbPosts.filter(post => post.id !== action.post_id )\n            }\n\n        default:\n            return state;\n\n    }\n\n\n}\n\nexport default gb_reducer;\n\n\nexport const addGBPost = (text) =>  {\n    return {type: ADD_GB_POST,text};\n}\n\nexport const newGBpostChange = (text) => {\n    return {type: NEW_GB_POST_CHANGE,changedText: text};\n}\n\nexport const setGBPosts = (posts) => {\n    return {type: SET_GB_POSTS, posts: posts};\n}\n\nexport const delGBpost = (post_id) => {\n    return {type: DEL_GB_POST, post_id: post_id};\n}\n\n\n// thunk-и\nexport const getGbPosts = () => async (dispatch) => {\n\n        let data = await API.getGbPosts()\n            // .then(data => {\n                dispatch(setGBPosts(data.items));\n    //         })\n    //         .catch(error => {\n    //             console.warn(error);\n    //         });\n    // }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3_SJs\",\"auth\":\"Header_auth__22ubL\",\"logout\":\"Header_logout__1UGPC\"};","module.exports = __webpack_public_path__ + \"static/media/zloy_admin.565b4950.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__rbGTo\",\"active\":\"Menu_active__1zJuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"copy\":\"Footer_copy__33kv9\",\"theme\":\"Footer_theme__18uS0\"};","\nimport kot from \"../images/kotigoroshko.jpg\"\nimport za from \"../images/zloy_admin.png\"\n\nconst ADD_CHAT_POST = 'samurai_project/chat/ADD_CHAT_POST';\nconst DEL_CHAT_POST = 'samurai_project/chat/DEL_CHAT_POST';\nconst NEW_CHAT_POST_CHANGE = 'samurai_project/chat/NEW_CHAT_POST_CHANGE';\n//const GET_CHAT_NEW_POST_TEXT = 'GET_CHAT_NEW_POST_TEXT';\n\nlet initialState = {\n    chatPosts: [\n        {id: 1, author: 'Котигорошко', authorAva: kot, text: 'Привіт, ти тут?', date: '15:25 17-08-2020'},\n        {id: 2, author: 'Admin', authorAva: za, text: 'Привіт, так', date: '15:26 17-08-2020'},\n        {id: 3, author: 'Котигорошко', authorAva: kot, text: 'а ти можеш зробити мені сайт візитку?', date: '15:27 17-08-2020'},\n        {id: 4, author: 'Котигорошко', authorAva: kot, text: 'і форум... скільки то буде коштувати?', date: '15:28 17-08-2020'},\n        {id: 5, author: 'Admin', authorAva: za, text: '$17 000', date: '15:29 17-08-2020'},\n        {id: 6, author: 'Котигорошко', authorAva: kot, text: 'Норм, давай реквізити, скину аванс ;)', date: '15:33 17-08-2020'},\n    ],\n    newChatPostText: 'this is Sparta!',\n}\n\nconst chat_reducer = (state = initialState,action) => {\n\n    switch (action.type){\n        case ADD_CHAT_POST:\n            let newChatPost = {\n                id: state.chatPosts.length + 1,\n                author: 'Котигорошко',\n                authorAva: kot,\n                text: action.text,\n                date: '15:25 17-09-2020'\n            }\n            return {\n                ...state,\n                chatPosts: [...state.chatPosts,newChatPost],\n                newChatPostText: ''\n            }\n\n\n        case NEW_CHAT_POST_CHANGE:\n            return {\n                ...state,\n                newChatPostText: action.changedText\n            }\n        case DEL_CHAT_POST:\n            return {\n                ...state,\n                chatPosts: state.chatPosts.filter(ch => ch.id !== action.id)\n            }\n\n        default:\n            return state;\n            //break;\n\n    }\n\n}\n\nexport default chat_reducer;\n\n\nexport const addChatPost = (text) =>  {\n    return {type: ADD_CHAT_POST, text};\n}\nexport const newChatPostChange = (text) => {\n    return {type: NEW_CHAT_POST_CHANGE,changedText: text};\n}\nexport const delChatPost = (id) => {\n    return {type: DEL_CHAT_POST,id};\n}\n// export const getChatNewPostText = () =>  {\n//     return {type: GET_CHAT_NEW_POST_TEXT};\n// }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3de2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Example_example__3UoYE\"};","module.exports = __webpack_public_path__ + \"static/media/rings.5fe3cf7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.264a22fb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"ErrorsShower_errors__1pJnf\"};"],"sourceRoot":""}