{"version":3,"sources":["utils/validate/validator.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/hoc/withAuthRedirect.jsx","components/Chat/ChatPosts/ChatPost.module.css","components/Chat/ChatSendForm/ChatSendForm.module.css","components/Chat/ChatPosts/ChatPosts.jsx","components/Chat/ChatSendForm/ChatSendForm.jsx","components/Chat/Chat.jsx","components/Chat/ChatContainer.jsx"],"names":["required","value","length","maxLenCreator","maxLen","concat","minLenCreator","minLen","FormControl","_ref","input","meta","touched","error","elType","props","hasError","React","createElement","className","styles","formControls","Textarea","Object","assign","Input","Hidden","type","createMyField","placeholder","component","name","validators","arguments","undefined","text","Field","validate","module","exports","mapStateToProps","auth","isAuth","withAuthRedirect","Component","connect","Redirect","to","ChatPosts","chat","map","key","id","c","chatpost","author","admin_post","chatpost_body","avaimg","src","authorAva","ava","alt","chatpost_text","chatpost_date","date","chatpost_admin","href","maxLen10","ChatReduxForm","reduxForm","form","onSubmit","handleSubmit","chat_text","chat_button","ChatSendForm","chat_form","formData","addChatPost","new_chat_post","console","log","Chat","newChatPostText","newChatPostChange","compose","state","chatPosts"],"mappings":"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","file":"static/js/5.b46e95b0.chunk.js","sourcesContent":["export const required = value => {\n    if(value && value.length > 0) {\n        //console.log(value.length)\n        return undefined;\n    }\n    return 'required field';\n}\n\n\n\nexport const maxLenCreator = (maxLen) => (value) => {\n    if(value.length <= maxLen) return undefined;\n    return `max length ${maxLen} symbols`;\n}\n\nexport const minLenCreator = (minLen) => value => {\n    if(value.length >= minLen) return undefined;\n    return `min length ${minLen} symbols`;\n}\n\nexport const onlyNumbers = () => value => {\n    if(value.match(/[0-9]/)) return undefined;\n    return `i accept only numbers `;\n}\n\n","import React from 'react';\nimport styles from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\nimport {required} from \"../../../utils/validate/validator\";\n\nconst FormControl = ({input, meta: {touched,error}, elType, ...props}) => {\n    let hasError = touched && error;\n    // console.log(props)\n    return (\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\n\n            <div>\n                {React.createElement(elType, {/*type:'file', */...input, ...props})}\n            </div>\n            {hasError && <span> {error}</span>}\n        </div>\n    )\n}\n\n/*\n\nReact.createElement(\n    \"input\", {\n        className: \"rating-input\", type: \"radio\", name: \"rate\", value: \"1\", ref: \"rating\", onChange: this.handleChange\n    }\n),\n*/\n\n\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='textarea' />\n}\nexport const Radio = (props) => { // деструктуризація, REST-оператор\n    return <FormControl {...props} elType='input' type='radio'/>\n}\n/*\nexport const Textarea = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/>\n    </FormControl>\n}*/\n/*\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}*/\n\nexport const Input = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input'/>\n}\nexport const Hidden = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='hidden' />\n}\nexport const FileUpload = (props) => { // деструктуризація, REST-оператор\n    //const {input, meta, ...restProps} = props;\n    return <FormControl {...props} elType='input' type='file'/>\n}\n\n\nexport const createMyField = (placeholder,component,name,validators, props = {}, text = '') =>\n    (\n        <div>\n            <Field\n                placeholder={placeholder}\n                component={component}\n                name={name}\n                validate={validators}\n                {...props}\n            /> {text}\n        </div>\n    )\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormsControls_formControls__MCv0m\",\"error\":\"FormsControls_error__9lcue\"};","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = ({auth}) => {\n    return {\n        isAuth: auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    const RedirectComponent = (props) => {\n        if(!props.isAuth) return <Redirect to={'/login'}/>;\n        return <Component {...props} />;\n    }\n    /*\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props} />;\n        }\n    }*/\n\n    return connect(mapStateToProps)(RedirectComponent)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatpost\":\"ChatPost_chatpost__2FC0u\",\"chatpost_body\":\"ChatPost_chatpost_body__gEXJK\",\"avaimg\":\"ChatPost_avaimg__fgTI-\",\"ava\":\"ChatPost_ava__1Delr\",\"name\":\"ChatPost_name__mEKCd\",\"chatpost_text\":\"ChatPost_chatpost_text__1UjjH\",\"chatpost_date\":\"ChatPost_chatpost_date__APbDL\",\"chatpost_admin\":\"ChatPost_chatpost_admin__ujIPK\",\"admin_post\":\"ChatPost_admin_post__B8DyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat_form\":\"ChatSendForm_chat_form__ADrgx\",\"chat_text\":\"ChatSendForm_chat_text__T_yM4\",\"chat_button\":\"ChatSendForm_chat_button__3qXFr\"};","import React from 'react';\nimport c from './ChatPost.module.css';\n\nconst ChatPosts = (props) => {\n\n    return (\n        props.chat.map(chat =>\n            <div key={chat.id} className={c.chatpost+(chat.author === 'Admin' ? ' '+c.admin_post : '')}>\n\n                <div className={c.chatpost_body}>\n                    <div className={c.avaimg}><img src={chat.authorAva} className={c.ava} alt=\"ava\"/></div>\n\n                    <div className={c.name}>{chat.author}</div>\n                    <div className={c.chatpost_text}>{chat.text}</div>\n                </div>\n\n                <div className={c.chatpost_date}>{chat.date}</div>\n                <div className={c.chatpost_admin}><a href={'editpost/'+chat.id}>edit</a>|<a href={'delpost/'+chat.id}>delete</a></div>\n\n            </div>\n\n)\n\n\n    );\n}\n\nexport default ChatPosts;","import React from 'react';\nimport c from './ChatSendForm.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLenCreator, required} from \"../../../utils/validate/validator\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLen10 = maxLenCreator(10);\n\nconst ChatForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field placeholder={'new CHAT post here'} component={Textarea}\n                   name={'new_chat_post'} className={c.chat_text}\n                   validate={[required,maxLen10]}\n            />\n            {/*<textarea\n\n                ref={new_chat_post}\n                value={props.newChatPostText}\n                onChange={onPostChange}/>*/}\n            <button className={c.chat_button} >Send</button>\n        </form>\n    )\n}\n\nconst ChatReduxForm = reduxForm({\n    form: 'chat_add_post'\n})(ChatForm)\n\nconst ChatSendForm = (props) => {\n\n//    let new_chat_post = React.createRef();\n/*\n\n    let onPostChange = () => {\n        let text = new_chat_post.current.value;\n        props.newChatPostChange(text);\n    }\n\n    let addPost = () => {\n        props.addChatPost();\n        props.newChatPostChange('');\n    }\n*/\n\n    const onSubmit = (formData) => {\n        props.addChatPost(formData.new_chat_post);\n        console.log(formData)\n        formData.new_chat_post = '';\n    }\n\n\n    return (\n        <div className={c.chat_form}>\n            <ChatReduxForm {...props} onSubmit={onSubmit} />\n        </div>\n\n    );\n}\n\nexport default ChatSendForm;","import React from 'react';\nimport ChatPosts from \"./ChatPosts/ChatPosts\";\nimport ChatSendForm from \"./ChatSendForm/ChatSendForm\";\n\nconst Chat = (props) => {\n\n    return (\n\n        <div>\n            <h1>Чат</h1>\n            {/*{props.chat.map(e => <ChatPosts*/}\n            {/*    id={e.id}*/}\n            {/*    author={e.author}*/}\n            {/*    authorAva={e.authorAva}*/}\n            {/*    text={e.text}*/}\n            {/*    date={e.date}*/}\n            {/*/>)}*/}\n            <ChatPosts\n                chat={props.chat}\n            />\n            <ChatSendForm\n                newChatPostText={props.newChatPostText}\n                addChatPost={props.addChatPost}\n                newChatPostChange={props.newChatPostChange}\n            />\n        </div>\n    );\n}\n\nexport default Chat;","import {addChatPost, newChatPostChange} from \"../../redux/chat_reducer\";\nimport {connect} from \"react-redux\";\nimport Chat from \"./Chat\";\nimport React from \"react\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {withSuspenseWrapper} from \"../hoc/withSuspenseWrapper\";\n\nconst ChatContainer = ({chat,newChatPostText,addChatPost,newChatPostChange}) => {\n    return <Chat\n        chat={chat}\n        newChatPostText={newChatPostText}\n        addChatPost={addChatPost}\n        newChatPostChange={newChatPostChange}\n    />\n}\n/*\n\nclass ChatContainer2 extends React.Component{\n    render() {\n\n\n    }\n}\n*/\n\nlet mapStateToProps = (state) => {\n    return {\n        chat: state.chat.chatPosts,\n        newChatPostText: state.chat.newChatPostText,\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {addChatPost,\n        newChatPostChange}),\n    withAuthRedirect\n)(ChatContainer)\n"],"sourceRoot":""}